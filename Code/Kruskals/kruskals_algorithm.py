# -*- coding: utf-8 -*-
"""Depth_First_Search.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JrsTSMvGA8VN1SEtKhqStb15U-D_jHnF

Depth First Search
"""
#Add set of nodes
Nodes = [1,2,3,4,5]

#Add set of arcs/edges
Edges = [[1,2],[1,3],[2,4],[4,5],[3,5],[1,4],[2,3],[3,4]]


#Edge weights
weight = {}
weight[1,2] = 1
weight[1,3] = 2
weight[2,4] = -1
weight[4,5] = 4
weight[3,4] = 3
weight[3,5] = 5
weight[1,4] = 6
weight[2,3] = -2

def DFS(Nodes, Edges,u,v):

  #Introduce stack S
  S = []
  S.append(u)

  #Introduce explored parameter
  explored = {}
  for i in Nodes:
    explored[i] = 0
  explored[u] = 1

  # Introduce parent parameter
  parent = {}
  for i in Nodes:
    parent[i] = -1

  while S != []:
    v = S[0]
    S.remove(v)
    explored[v] = 1
    # print("node v = ", v)
    counter = 0
    for w in Nodes:
      if [v,w] in Edges and explored[w] == 0:
        S.insert(counter,w)
        parent[w] = v
        counter += 1
      elif [w,v] in Edges and explored[w] == 0:
        S.insert(counter,w)
        parent[w] = v
        counter += 1

  return parent

def Edge_Sort(Nodes, Edges, weight):
  Edges_Sort = []
  for [i,j] in Edges:

    counter = 0
    
    for [u,v] in Edges_Sort:
      if [i,j] != [u,v]:
        if weight[i,j] < weight[u,v]:

          Edges_Sort.insert(counter,[i,j])
          break
    
      counter += 1
    
    if counter == len(Edges_Sort):
      Edges_Sort.insert(counter,[i,j])
  return Edges_Sort



def Kruskals(Nodes, Edges, weight):


  #Sorted Edges
  Edges_Sort = Edge_Sort(Nodes,Edges, weight)


  #TREE EDGES
  Tree = []

  while len(Tree) < len(Nodes)-1:
    for [i,j] in Edges_Sort:

      #Does [i,j] form a cycle?
      #Run a DFS here to see if you can reach i from j

      parent = DFS(Nodes,Tree,i,j)


      if parent[j] < 0:
        Tree.append([i,j])
        # print("Add edge", i,j, " to the tree")
      Edges_Sort.remove([i,j])
      break
  return Tree


print("Here are the edges of the minimum spanning tree ", Kruskals(Nodes,Edges,weight))